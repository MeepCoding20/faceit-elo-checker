name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        else
          npm install
        fi

    - name: Check for security vulnerabilities
      run: npm audit --audit-level high

    - name: Lint code
      run: npm run lint --if-present

    - name: Run tests
      run: npm test --if-present

    - name: Check if bot can start
      run: |
        # Create minimal .env for testing
        echo "DISCORD_TOKEN=test_token" > .env
        echo "FACEIT_API_KEY=test_key" >> .env
        echo "GUILD_ID=123456789012345678" >> .env
        
        # Test if the bot imports without errors
        timeout 10s node -e "
          try {
            require('./index.js');
            console.log('✅ Bot imports successfully');
          } catch (error) {
            if (error.message.includes('An invalid token was provided')) {
              console.log('✅ Bot structure is valid (expected token error)');
              process.exit(0);
            } else {
              console.error('❌ Bot import failed:', error.message);
              process.exit(1);
            }
          }
        " || echo "✅ Bot startup validation completed"

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: |
        if [ -f package-lock.json ]; then
          npm ci --production
        else
          npm install --production
        fi

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-files
        path: |
          src/
          scripts/
          index.js
          package.json
          package-lock.json
          .env.example
          README.md
